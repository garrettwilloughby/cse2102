import{_ as f,r as p,h as y,o as a,c as u,a as r,t as l,F as m,f as C,k as v,v as I,g as S,i as T,p as w,b as x}from"./index-e17482e7.js";import{S as N}from"./StudentCourseCom-18fcd600.js";const k="https://28it7l5myh.execute-api.us-east-1.amazonaws.com/test_courses/resources",D="https://17s030bn2j.execute-api.us-east-1.amazonaws.com/test4",P={data(){return{username:"",firstName:"",lastName:"",Courses:[],schoolRole:"",courseData:"",selectedCourse:null,currentCredits:0,totalCredits:0}},async mounted(){console.log("hello");const t=localStorage.getItem("loginParams");if(console.log(t),t){const e=JSON.parse(t);this.firstName=e.first,this.lastName=e.last,this.Courses=e.courses,this.username=e.username,this.password=e.password,this.role=e.role,this.currentCredits=e.currentCredits,this.totalCredits=e.totalCredits}const o=p([]);try{const e=await fetch(k);if(e.ok){const n=await e.json(),s=JSON.parse(n.body);o.value=s,console.log(o._rawValue)}else console.error("API request failed:",e.status,e.statusText)}catch(e){console.error("Error during API request:",e)}this.courseData=o.value},methods:{async apiFun(){const t=this.Courses.map(e=>e.S);console.log("Credits",this.currentCredits),console.log("totalCredits",this.totalCredits);let o={username:this.username,currentCredits:this.currentCredits,totalCredits:this.totalCredits,Courses:t};this.loginParams={username:this.username,password:this.password,courses:this.Courses,role:this.role,last:this.lastName,first:this.firstName,currentCredits:this.currentCredits,totalCredits:this.totalCredits},console.log("payload",JSON.stringify(o)),this.$store.commit("setLoginParams",this.loginParams);try{const e=await fetch(D,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)});if(e.ok){const n=await e.json();console.log("API Response:",n)}else{console.error("API request failed:",e.status,e.statusText);const n=await e.json();console.error("Error response body:",n)}}catch(e){console.error("Error during API request:",e)}},async apiFunAdd(){const t="https://d3gxk33bye.execute-api.us-east-1.amazonaws.com/Test/addStudentToCourse",o=`?username=${this.username}&courseid=${this.selectedCourse.courseid.S}`;console.log(o);const e=t+o;try{var n={method:"PUT",redirect:"follow"};fetch(e,n).then(s=>s.text()).then(s=>console.log(s)).catch(s=>console.log("error",s))}catch(s){console.error(s)}},async apiFunRem(t){console.log("apiFunRem Called!!!!!!!!!!"),console.log("In remove API, trying to remove",t);const o="https://d3gxk33bye.execute-api.us-east-1.amazonaws.com/Test/removeStudentFromCourse",e=`?username=${this.username}&courseid=${t.S}`,n=o+e;try{var s={method:"PATCH",redirect:"follow"};fetch(n,s).then(i=>i.text()).then(i=>console.log(i)).catch(i=>console.log("error",i))}catch(i){console.error(i)}},convertTime(t){const[o,e]=t.split(":"),n=e.slice(0,2),s=e.slice(-2);let i=parseInt(o);s==="PM"&&i!==12&&(i+=12);const d=`${i.toString().padStart(2,"0")}${n}`;return parseInt(d)},timeConflict(){const t=this.convertTime(this.selectedCourse.schedule.M.startTime.S),o=this.convertTime(this.selectedCourse.schedule.M.endTime.S),e=this.selectedCourse.schedule.M.days.SS,n=p(JSON.parse(localStorage.getItem("courseInfoSaved"))||{});for(const s of this.Courses){const i=this.convertTime(n._rawValue[s.S].Items[0].schedule.M.startTime.S),d=this.convertTime(n._rawValue[s.S].Items[0].schedule.M.endTime.S),c=n._rawValue[s.S].Items[0].schedule.M.days.SS,_=e.some(g=>c.includes(g));if((t>=i&&t<d||o>i&&o<=d||t<=i&&o>=d)&&_)return s.S}return!1},enroll:function(){const t=this.Courses.some(e=>e.S===this.selectedCourse.courseid.S),o=this.timeConflict();if(t)alert("You are already enrolled in this class!");else if(o)alert("Time conflict!",o);else{console.log("enrolling in",this.selectedCourse.courseid.S);const e={S:this.selectedCourse.courseid.S};this.Courses.push(e),this.totalCredits=parseInt(this.totalCredits)+parseInt(this.selectedCourse.credits.N),this.currentCredits=parseInt(this.currentCredits)+parseInt(this.selectedCourse.credits.N),this.apiFunAdd(),this.apiFun()}},drop:function(t){console.log("dropping",t.S);const o=p(JSON.parse(localStorage.getItem("courseInfoSaved"))||{});let e=this.Courses.findIndex(n=>n.S===t.S);e!==-1&&this.Courses.splice(e,1),this.totalCredits=parseInt(this.totalCredits)-o._rawValue[t.S].Items[0].credits.N,this.currentCredits=parseInt(this.currentCredits)-o._rawValue[t.S].Items[0].credits.N,this.apiFunRem(t),this.apiFun()},link:function(t){console.log(t),this.$router.push("/course/"+t)}},components:{StudentCourseCom:N}},h=t=>(w("data-v-64a6aaa4"),t=t(),x(),t),M={class:"body"},A={class:"top"},V=h(()=>r("div",null,[r("h1",{class:"page-header"},"Register for classes!"),r("h1",{class:"page-subheader"},"Here are your current classes:")],-1)),b={class:"creditScore"},F={class:"creditScore"},R=["onClick"],E=h(()=>r("p",{class:"drop"},"Drop",-1)),q=[E],U={class:"register"},J=h(()=>r("label",null,"Select class: ",-1)),O=["value"],j={key:0,class:"courseView"},B=h(()=>r("h2",null,"You have selected:",-1)),z={class:"course-title"},H={key:0},L=h(()=>r("p",null,"Days/Times:",-1)),K={class:"courseDays"},Y={class:"day"},G=h(()=>r("p",{class:"enroll"},"Enroll",-1)),Q=[G],W=h(()=>r("div",{class:"bottom"},null,-1));function X(t,o,e,n,s,i){const d=y("StudentCourseCom");return a(),u("div",M,[r("div",A,[V,r("div",null,[r("h2",b," Total Credits Taken: "+l(s.totalCredits),1),r("h2",F,"Credits Currently Taking: "+l(s.currentCredits),1)])]),(a(!0),u(m,null,C(s.Courses,c=>(a(),u("div",{class:"courseView",key:c.S},[T(d,{course:c.S},null,8,["course"]),r("div",{class:"dropButton",onClick:_=>i.drop(c)},q,8,R)]))),128)),r("div",U,[J,v(r("select",{"onUpdate:modelValue":o[0]||(o[0]=c=>s.selectedCourse=c),id:"selectedCourse"},[(a(!0),u(m,null,C(s.courseData,c=>(a(),u("option",{key:c.courseid,value:c},l(c.courseid.S)+" - "+l(c.course_name.S),9,O))),128))],512),[[I,s.selectedCourse]])]),s.selectedCourse?(a(),u("div",j,[r("div",{class:"course-info",onClick:o[1]||(o[1]=c=>i.link(s.selectedCourse.courseid.S))},[r("div",null,[B,r("p",z,"Course: "+l(s.selectedCourse.courseid.S)+" - "+l(s.selectedCourse.course_name.S),1),r("p",null,"Instructor: "+l(s.selectedCourse.instructor.S),1),r("p",null,"Description: "+l(s.selectedCourse.course_description.S),1),s.selectedCourse.prereq.S?(a(),u("p",H,"Prerequistes: "+l(s.selectedCourse.prereq.L),1)):S("",!0)]),r("div",null,[L,r("div",K,[(a(!0),u(m,null,C(s.selectedCourse.schedule.M.days.SS,c=>(a(),u("p",Y,l(c),1))),256))]),r("p",null,l(s.selectedCourse.schedule.M.startTime.S)+" - "+l(s.selectedCourse.schedule.M.endTime.S),1),r("p",null,"Cap: "+l(s.selectedCourse.curr_cap.N)+" / "+l(s.selectedCourse.max_cap.N)+" | Credits: "+l(s.selectedCourse.credits.N),1)])]),r("div",{class:"enrollButton",onClick:o[2]||(o[2]=(...c)=>i.enroll&&i.enroll(...c))},Q)])):S("",!0),W])}const se=f(P,[["render",X],["__scopeId","data-v-64a6aaa4"]]);export{se as default};
